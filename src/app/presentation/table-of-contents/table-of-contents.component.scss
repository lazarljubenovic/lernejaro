@import '../../global';

:host {
  padding: 2em;
  display: block;
  font-size: 1.4em;

  > ::ng-deep * + * {
    color: red;
  }

  ol {
    margin: 0;
    padding: 0;
    list-style-type: none;
    display: flex;
    flex-direction: column;

    li {
      margin: 0;

      &:not(:last-child) {
        border-bottom: solid 1px black;
      }

      button {
        @include button-reset;
        width: 100%;
        text-align: left;
        padding: 1ex;
        cursor: pointer;
        color: inherit;

        &:hover, &:focus {
          background-color: rgba(black, .1);
        }
      }
    }
  }
}

@each $color-string in get-color-strings() {
  $accent-color-string: get-accent-color-string-for($color-string);

  :host-context(.lrn-theme-color-#{$color-string}) {

    ol {

      li {

        &.current {
          color: material-color($accent-color-string, '600');
        }
      }
    }
  }
}

@each $theme-name in ('light' 'dark') {
  $inverse-theme-name: inverse-theme-name($theme-name);

  :host-context(.lrn-theme-#{$theme-name}) {
    background-color: get-theme($theme-name, 'back');
    color: get-theme($inverse-theme-name, 'front');

    ol {

      li {
        color: get-theme($inverse-theme-name, 'front');
      }
    }
  }
}

