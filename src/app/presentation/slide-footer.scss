@import '../global';
@import '../imports';


.footer {
  height: 68px;
  display: flex;
  align-items: center;

  ul.navigation {
    list-style-type: none;
    display: flex;
    align-items: center;
    margin: 0;
    padding: 0 1em;
    box-sizing: border-box;

    li {
      padding: 0;
      margin: 0 .6em;
    }
  }

  .slide-index {
    margin-left: 2em;
    margin-right: 2em;

    .current {
      font-weight: bold;
    }
  }

  // TODO Draw this out in a mixin ("flat badge-button"?), this is reusable
  button {
    width: 3em;
    height: 3em;
    // TODO Write a mixin for button reset
    background-color: transparent;
    outline: none;
    border: none;
    margin: 0;
    padding: 0;
    cursor: pointer;
    border-radius: 50%;
  }
}

// Theming
@each $color-string in get-color-strings() {
  :host-context(.lrn-theme-color-#{$color-string}) {
    $accent-color-string: get-accent-color-string-for($color-string);

    .footer {
      background-color: material-color($color-string, '500');
    }

    .navigation {
      color: get-color($color-string, '500', 'hint');

      .slide-index {
        color: get-color($color-string, '500', 'primary');

        .current {
          //color: get-color($color-string, '500', 'primary');
          color: material-color($accent-color-string, 'a700');
        }
      }

      button {
        color: get-color($color-string, '500', 'hint');

        &:focus,
        &:hover {
          // TODO Check the spec about hovering/focusing on icons
          background-color: material-color($color-string, '600');
        }
      }
    }
  }
}
