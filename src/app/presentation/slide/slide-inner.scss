@import '../../global';

.slide-inner {
  width: 100%;
  height: calc(100vh - #{$slide-footer-height + $slide-header-height});
  box-sizing: border-box;
  font-size: 2.6em;
  padding: 0.6em 1em;

  pre {
    padding: 1em;
    overflow-y: auto;

    > code {
      background-color: transparent!important;
    }
  }

  img {
    max-width: 100%;
    max-height: 300px;
    margin: auto;
    display: flex;
  }

  code {
    display: inline-block;
    padding: .3ex .3em;
    border-radius: 3px;
  }

  blockquote {
    padding: 1em;
    margin: 0;

    p:first-child { margin-top: 0; }
    p:last-child { margin-bottom: 0; }
  }
}

// Theming
@each $color-string in get-color-strings() {
  .lrn-theme-color-#{$color-string} lrn-slide {
    .slide-inner {

      code {
        background-color: rgba(material-color($color-string, '500'), .1);
      }
    }
  }
}

@each $theme in ('light' 'dark') {
  .lrn-theme-#{$theme} lrn-slide {
    .slide-inner {
      color: get-theme($theme, 'primary');

      pre {
        @include card-basic(inverse-theme-name($theme));
        color: get-theme(inverse-theme-name($theme), 'primary');
      }

      blockquote {
        @include card-basic($theme);
      }
    }
  }
}
