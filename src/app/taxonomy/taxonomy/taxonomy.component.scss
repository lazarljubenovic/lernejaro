@import '../../imports';
@import '../../global';

// Theming
// TODO @at root + mixin with @content PLZ
@each $theme-string in ('light' 'dark') {
  .lrn-theme-#{$theme-string} {
    lrn-taxonomy > lrn-taxonomy-item {
      > .title {
        @include card-basic($theme-string, 2);
      }

      > .description-and-children {
        @include card-basic($theme-string, 2);
      }
    }
  }
}

@each $color-string in get-color-strings() {
  .lrn-theme-color-#{$color-string} {
    lrn-taxonomy > lrn-taxonomy-item {
      > .title {
        border-top: solid 4px material-color(get-accent-color-string-for($color-string));
      }
    }
  }
}

// Wrapper around the whole taxonomy, does not recurse
lrn-taxonomy {
  @include grid-container-fluid-single-row-variable-columns(1em);
}

// All items
lrn-taxonomy-item {
  display: block;
}

// The top-level item
lrn-taxonomy > lrn-taxonomy-item {
  $padding-top-bottom: .5em;
  $padding-left-right: .8em;

  > .title {
    // TODO the following three lines need some framework magic around them,
    // similar logic is everywhere
    $font-size: 1.2em;
    font-size: $font-size;
    padding: $padding-top-bottom / $font-size * 1em $padding-left-right / $font-size * 1em;
    margin-bottom: 1em / $font-size * 1em;
  }

  > .description-and-children {
    @include card-basic('light', 2);

    > .description {
      $font-size: 1em;
      font-size: $font-size;
      padding: $padding-top-bottom / $font-size * 1em $padding-left-right / $font-size * 1em;
      border-bottom: solid 1px $light-theme-dividers-text-color;
    }

    > .children {
      $font-size: 1em;
      font-size: $font-size;
      padding: $padding-top-bottom / $font-size * 1em $padding-left-right / $font-size * 1em;
    }
  }
}

// Lobotomize all but top-level
lrn-taxonomy > lrn-taxonomy-item lrn-taxonomy-item + lrn-taxonomy-item {
  margin-top: 1em;
}

// All items but the top-level
lrn-taxonomy > lrn-taxonomy-item lrn-taxonomy-item {
  $font-size: .8em;
  font-size: $font-size;
  $margin-left: 1em;

  > .title {
    text-transform: uppercase;
    font-weight: bold;

    &:before {
      content: 'â€¢';
      width: $margin-left;
      display: inline-block;
    }
  }

  > .description-and-children {
    margin-left: $margin-left;

    > .description {
    }

    > .children {
    }
  }
}
