@import '../global';

$header-height: 3em;

$breakpoint-l: 65rem;
$breakpoint-m: 40rem;
$breakpoint-s: 20rem;

body {
  counter-reset: figureCounter;
  font-size: 100%;

  @media (max-width: $breakpoint-l) {
    font-size: 87.5%;
  }

  @media(max-width: $breakpoint-m) {
    font-size: 75%;
  }

  @media (max-width: $breakpoint-s) {
    font-size: 67%;
  }
}

lrn-notebook {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: center;
  width: 100%;
  min-height: 100%;
  font-size: 1.24em;
  font-family: Roboto, sans-serif; // TODO Move this to body

  .table-of-content {
    position: fixed;
    z-index: 10;
    top: $header-height + 1em;
    left: 0;
    bottom: 1em;
    width: auto;
    max-width: 33%;
    @include z-depth-3dp;
    padding: 1em;
    padding-left: 2em;
    margin-left: -1em;
    border-radius: 4px;

    &.hidden {
      display: none;
    }

    @media (max-width: 700px) {
      margin-left: 0;
      padding: 1em;
      left: 1em;
      right: 1em;
      width: auto;
      max-width: none;
    }
  }

  header {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    width: 100%;
    padding: 0;
    min-height: $header-height;
    @include z-depth-2dp;
    display: flex;
    z-index: 10;

    .icon {
      display: flex;
      justify-content: center;
      align-items: center;
      width: $header-height;

      > i {
        font-size: 1.5em;
      }
    }

    .title-and-subtitle {
      display: flex;
      flex-direction: column;
      justify-content: center;
      margin-left: 1em;
      font-weight: 300;

      .title {
        font-size: 1.33em;
      }
    }

    .flex-spacer {
      flex: 1 0 0;
    }

    .buttons {
      display: flex;

      button {
        @include button-reset;
        width: $header-height * .66;
        display: flex;
        justify-content: center;
        align-items: center;
        cursor: pointer;
        margin-right: $header-height * .66 * .33;

        i {
          padding-top: .33ex;
        }
      }
    }
  }

  > article.wrapper {
    padding-top: calc(#{$header-height} + #{1rem});
    box-sizing: border-box;
    padding-left: 1rem;
    padding-right: 1rem;
    width: 100%;
    max-width: calc(50rem + 10vw);
    font-size: calc(1em + 0.1vw);
    line-height: 1.5;

    @media (max-width: $breakpoint-s) {
      padding-left: .33rem;
      padding-right: .33rem;
      max-width: 100%;
    }

    > h2 { margin-top: 1.1039em; }
    > h3 { margin-top: 1.33em; }
    > h4 { margin-top: 1.7689em; }
    > h5 { margin-top: 2.2211em; }
    > h6 { margin-top: 3.0989em; }

    // We don't need to display h1
    > h1 {
      display: none;
    }

    > h1, > h2, > h3, > h4, > h5, > h6 {

      button {
        @include button-reset;
        display: inline-block;
        margin-left: .5em;
        opacity: .16;

        &:hover,
        &:focus {
          opacity: .5;
        }
      }
    }

    // Summary directly below wrapper serves an abstract for the document.
    > summary {
      margin-top: 1em;
      padding: 1ex 1em;
      font-size: 1.1em;

      &::first-line {
        font-variant: small-caps;
      }

      // When using markdown, there's an additional <p> which adds ugly margins
      // Remove top and bottom margin,
      // taking into account possibility that there are multiple <p>'s
      p:first-child { margin-top: 0; }
      p:last-child { margin-bottom: 0; }
    }

    code {
      padding: .1em;
      margin-left: .2em;
      margin-right: .2em;
      border-radius: 2pt;
    }

    pre {
      display: block;
      padding: .8rem 1.2em;
      box-sizing: border-box;
      overflow-x: auto;

      code {
        display: inline;
        background-color: transparent;
        box-shadow: none;
        border-radius: 0;
      }
    }

    img {
      max-width: 100%;
    }

    figure {
      display: table;
      margin-left: 0;
      margin-right: 0;
      margin-top: 1em;
      margin-bottom: 1em;
      width: 100%;
      text-align: center;

      @media (min-width: $breakpoint-m) {
        &.left {
          width: auto;
          text-align: left;
          float: left;
          margin-right: 1em;

          @media (min-width: $breakpoint-l) {
            margin-left: -3em;
          }
        }

        &.right {
          width: auto;
          text-align: right;
          float: right;
          margin-left: 1em;
          align-items: flex-end;

          @media (min-width: $breakpoint-l) {
            margin-right: -3em;
          }
        }
      }

      figcaption {
        counter-increment: figureCounter;
        margin-top: 1ex;
        font-size: .8em;
        font-style: italic;
        display: table-caption;
        caption-side: bottom;

        &:before {
          content: "Figure " counter(figureCounter) ". ";
          font-weight: bold;
          font-style: normal;
        }
      }
    }

    dl {

      dt {
        font-weight: bold;
      }

      dd {
        margin-bottom: 1.5ex;
      }
    }

    :target {

      &:before {
        content: "";
        display: block;
        height: 80px;
        margin-top: -80px;
      }
    }
  }
}

@each $color-string in get-color-strings() {
  .lrn-theme-color-#{$color-string} lrn-notebook {
    $accent-color-string: get-accent-color-string-for($color-string);

    header {

      .icon {
        background-color: material-color($color-string, '500');
      }

      .title-and-subtitle {

        .title {
          color: material-color($accent-color-string, '700');
        }
      }
    }
  }
}

@each $theme-name in 'light' 'dark' {
  .lrn-theme-#{$theme-name} lrn-notebook {
    $inverse-theme-name: inverse-theme-name($theme-name);
    color: get-theme($inverse-theme-name, 'front');
    background-color: get-theme($theme-name, 'back');

    header {
      background-color: get-theme($theme-name, 'app-bar');

      .icon {
        color: get-theme($theme-name, 'back');
      }

      .buttons {

        button {
          color: get-theme($inverse-theme-name, 'front');
        }
      }
    }

    > article.wrapper {

      > summary {
        $border: solid 1pt get-theme($inverse-theme-name, 'back');
        border-top: $border;
        border-bottom: $border;
      }

      code {
        background-color: rgba(get-theme($inverse-theme-name, 'front'), .08);
      }

      pre {
        background-color: rgba(get-theme($inverse-theme-name, 'front'), .08);
      }
    }
  }
}
