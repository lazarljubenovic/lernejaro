@import '../../global';

$color: material-color('blue-grey', '900');

// TODO make these ems, exs
$size: 64px;
$margin: 36px;
$cog-icon-size: $size / 2;

// Theming
@each $color-string in get-color-strings() {
  .lrn-theme-color-#{$color-string} lrn-expanding-fab {
    $background-color-string: get-accent-color-string-for($color-string);
    color: get-color($background-color-string, 'a400', 'hint');

    .visible {
      background-color: material-color($background-color-string, 'a400');

      .icon {
        color: get-color($background-color-string, 'a400', 'primary');
      }

      .content {

        > button {
          @include button-flat-badge($background-color-string, 'a400');
        }
      }
    }
  }
}

lrn-expanding-fab {
  position: fixed;
  bottom: $margin;
  right: $margin;

  .visible {
    color: $black; // TODO Make a mixin that will generate dark/light color based on background color
    border-radius: $size / 2;
    @include square($size);
    @include z-depth-3dp;
    display: flex;
    flex-direction: row-reverse;
    align-items: center;
    overflow: hidden;

    .icon {
      @include force-square($size);
      display: flex;
      align-items: center;
      justify-content: center;
      cursor: pointer;

      span {
        font-size: $cog-icon-size;
      }
    }

    &.expanded {
      width: auto;
    }
  }

  .content {
    display: flex;
    justify-content: center;
    align-items: center;
    text-wrap: none;
    padding-left: 1.33em;

    > * + * {
      margin-left: .66em;
    }

    > button {
    }
  }
}
